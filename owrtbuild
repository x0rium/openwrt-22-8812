#!/usr/bin/env bash

VERSION="1.0.0"


show_usage(){
    cat << EOF
Usage: owrtbuild <command> [args...]
  Commands:
    init <tag>                  Initializes the build environment with specific image tag
    cleanup                     Removes containers + images
    attach                      Re-Starts the build environment and attaches the console
    --help                      Displays this help
    --version                   Displays version

  Usage: ./openwrtbuild init 
  FirmwarePath: /home/build/openwrt/bin/targets/<device>/<arch> in Container
EOF
    exit 0
}

show_version(){
    cat << EOF
openwrtbuild
 - Version: ${VERSION}
 - License: PIRATE
 - Contacts: https://t.me/joinchat/PUTb1U-7ax0kXXId2nnCeA
EOF
    exit 0
}

[ "$1" = "--help" ] && show_usage
[ "$1" = "--version" ] && show_version

CONF_FILENAME="$(pwd)/config"
[ -f "$CONF_FILENAME" ] && {
    source $CONF_FILENAME
}

[ -z "$BUILD_DIR" ] && {
    BUILD_DIR="$(pwd)/target"
}




init(){

#  git clone https://github.com/x0rium/8211ac.git 
  
  docker build \
        --build-arg GIT_REVISION=$1 \
        --tag openwrt-build:$1 \
        .

  docker run \
        -it \
        --name openwrt-env \
        --mount type=bind,source=$BUILD_DIR,target=/home/build/openwrt/bin/targets \
        openwrt-build:$1
}


attach(){
    docker start openwrt-env 
    docker attach openwrt-env 
}

cleanup(){
    docker container rm openwrt-env
    docker image rm openwrt-build
}

# Command Dispatching
# ---------------------------------------
case "$1:$2" in
    init:*)
        init "$2"
        exit 0
    ;;

    attach:*)
        attach
        exit 0
    ;;

    cleanup:*)
        cleanup
        exit 0
    ;;

    *)
        show_usage
        exit 1
    ;;
esac
